{"ast":null,"code":"import _classCallCheck from \"/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/src/components/image-results/ImageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport { Link } from 'react-router-dom';\n\nvar ImageResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageResults, _Component);\n\n  function ImageResults() {\n    _classCallCheck(this, ImageResults);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ImageResults).apply(this, arguments));\n  }\n\n  _createClass(ImageResults, [{\n    key: \"render\",\n    value: function render() {\n      var imageListContent;\n      var data = this.props.data;\n\n      if (data) {\n        imageListContent = React.createElement(GridList, {\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, data.map(function (img) {\n          return React.createElement(\"div\", {\n            title: img.name,\n            key: img.summary,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            }, React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }, img.genres)),\n            actionIcon: React.createElement(\"button\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: \"/view/\".concat(img.id),\n                state: {\n                  img: img.summary\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            }, \"Show Details\")),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.image.medium,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        imageListContent = null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, imageListContent);\n    }\n  }]);\n\n  return ImageResults;\n}(Component);\n\nImageResults.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/home/nasr/Documents/ReactStation/Movies-DB-React-Web-App-/src/components/image-results/ImageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","Link","ImageResults","imageListContent","data","props","map","img","name","summary","genres","pathname","id","state","image","medium","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,sBAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,Y;;;;;;;;;;;;;6BAEO;AACL,UAAIC,gBAAJ;AADK,UAEGC,IAFH,GAEY,KAAKC,KAFjB,CAEGD,IAFH;;AAGL,UAAGA,IAAH,EAAQ;AACJD,QAAAA,gBAAgB,GACZ,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCC,IAAI,CAACE,GAAL,CAAS,UAAAC,GAAG;AAAA,iBACT;AACA,YAAA,KAAK,EAAEA,GAAG,CAACC,IADX;AAEA,YAAA,GAAG,EAAED,GAAG,CAACE,OAFT;AAGA,YAAA,QAAQ,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUF,GAAG,CAACG,MAAd,CADJ,CAJJ;AAQA,YAAA,UAAU,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,IAAD;AAAM,cAAA,EAAE,EAAE;AACNC,gBAAAA,QAAQ,kBAAWJ,GAAG,CAACK,EAAf,CADF;AAENC,gBAAAA,KAAK,EAAE;AAACN,kBAAAA,GAAG,EAAEA,GAAG,CAACE;AAAV;AAFD,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAK,YAAA,GAAG,EAAEF,GAAG,CAACO,KAAJ,CAAUC,MAApB;AAA4B,YAAA,GAAG,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBA,CADS;AAAA,SAAZ,CADD,CADJ;AA4BH,OA7BD,MA6BO;AACHZ,QAAAA,gBAAgB,GAAG,IAAnB;AACH;;AAEA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEA,gBADF,CAAP;AAKJ;;;;EA3CsBN,S;;AA8C3BK,YAAY,CAACc,SAAb,GAAyB;AACrBZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,KAAV,CAAgBC;AADD,CAAzB;AAKA,eAAehB,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ImageResults extends Component {\r\n\r\n    render() {\r\n        let imageListContent;\r\n        const { data } = this.props\r\n        if(data){\r\n            imageListContent = (\r\n                <GridList cols={3}>\r\n                {data.map(img => (\r\n                    <div\r\n                    title={img.name}\r\n                    key={img.summary}\r\n                    subtitle={\r\n                        <span>\r\n                            <strong>{ img.genres }</strong>\r\n                        </span>\r\n                    }\r\n                    actionIcon={\r\n                        <button>\r\n                            <Link to={{\r\n                                pathname: `/view/${img.id}`,\r\n                                state: {img: img.summary}\r\n                                }}>\r\n                            Show Details\r\n                            </Link>\r\n                        </button>\r\n                    }\r\n                    >\r\n                    <img src={img.image.medium} alt=\"\" />\r\n\r\n                    </div>\r\n                ))}\r\n                </GridList>\r\n            )\r\n        } else {\r\n            imageListContent = null;\r\n        }\r\n\r\n         return <div>\r\n                 {imageListContent}\r\n             </div>\r\n             \r\n         \r\n    }\r\n}\r\n\r\nImageResults.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n}\r\n\r\n\r\nexport default ImageResults;"]},"metadata":{},"sourceType":"module"}